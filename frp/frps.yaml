---
apiVersion: v1
data:
  frps.ini: |+
    [common]
    bind_port = 7000
    dashboard_port = 2333
    token = xxx
    dashboard_user = xxx
    dashboard_pwd = xxx
    vhost_http_port = 80
    vhost_https_port = 443
kind: ConfigMap
metadata:
  name: frps-conf
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frps
  template:
    metadata:
      labels:
        app: frps
    spec:
      hostNetwork: true
      volumes:
        - name: frps-conf-map
          configMap:
            name: frps-conf
      containers:
        - name: frps
          image: snowdreamtech/frps:0.38.0
          ports:
            - containerPort: 7890
          volumeMounts:
            - name: frps-conf-map
              mountPath: /etc/frp/frps.ini
              subPath: frps.ini
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frps-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  tls:
    - hosts:
        - frps.ihave.cool
      secretName: frps-tls
  rules:
  - host: frps.ihave.cool
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frps-svc
            port:
              number: 7000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frps-dashboard-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  tls:
    - hosts:
        - frps-dashboard.ihave.cool
      secretName: frps-dashboard-tls
  rules:
  - host: frps-dashboard.ihave.cool
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frps-dashboard-svc
            port:
              number: 2333
